name: Build Server

run-name: Build Server run by ${{ github.actor }}

on:
  push:
    branches:
      - release
    paths:
      - "server/**"
  pull_request:
    branches:
      - release
    paths:
      - "server/**"
  workflow_dispatch:
      
defaults:
  run:
    working-directory: server

jobs:
  build-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          cache-dependency-path: server/yarn.lock
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build Angular
        run: yarn ng build --prod
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: server-build
          path: server/dist

  deploy-server:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build-server
    concurrency: deploy-server
    environment: production
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: server-build
      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          ARGS: "-rzvc -i"
          SOURCE: "server/dist/"
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_PORT: ${{ secrets.DEPLOY_PORT }}
          REMOTE_USER: ${{ secrets.DEPLOY_USERNAME }}
          TARGET: "_tmp_server"
          SCRIPT_BEFORE: |
            rm -rf _tmp_server
            mkdir _tmp_server
          SCRIPT_AFTER: |
            cp local.json _tmp_server/server/dist/server/src/config/local.json
            cd _tmp_server/server/dist/server
            yarn --frozen-lockfile --network-timeout=300000
            rm -rf _old_server
            mv live/server _old_server
            mv _tmp/server live/server
            sudo /bin/systemctl restart yoc
